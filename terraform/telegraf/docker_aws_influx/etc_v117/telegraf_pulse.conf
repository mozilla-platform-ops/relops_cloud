[agent]
  interval = "60s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "5s"
  flush_jitter = "0s"
  precision = ""
  debug = true
  quiet = false
  logfile = "/etc/telegraf/run_pulse.log"
  hostname = "$HOSTNAME"
  omit_hostname = true

[[outputs.file]]
  files = ["stdout"]

[[inputs.amqp_consumer]]
  name_prefix = "pulse_"
  brokers = ["amqps://pulse.mozilla.org:5671/"]
  #insecure_skip_verify = true
  username = "username1"
  password = "password1"
  #username = "guest"
  #password = "guest"
  exchange = "exchange/taskcluster-queue/v1/task-running"
  exchange_type = "topic"
  exchange_passive = true
  queue = "queue/relopsmonitoring/telegraf-running"
  binding_key = "#"
  data_format = "json"
  json_query = "status"
  tag_keys = ["workerType", "provisionerId"]
  json_string_fields = ["state"]
  fielddrop = [ "runs*", "retries*" ]
  taginclude = ["workerType", "provisionerId", "state"]

[[inputs.amqp_consumer]]
  name_prefix = "pulse_"
  brokers = ["amqps://pulse.mozilla.org:5671/"]
  #insecure_skip_verify = true
  username = "username1"
  password = "password1"
  #username = "guest"
  #password = "guest"
  exchange = "exchange/taskcluster-queue/v1/task-failed"
  exchange_type = "topic"
  exchange_passive = true
  queue = "queue/relopsmonitoring/telegraf-failed"
  binding_key = "#"
  data_format = "json"
  json_query = "status"
  tag_keys = ["workerType", "provisionerId"]
  json_string_fields = ["state"]
  fielddrop = [ "runs*", "retries*" ]
  taginclude = ["workerType", "provisionerId", "state"]

[[inputs.amqp_consumer]]
  name_prefix = "pulse-treeherder_"
  brokers = ["amqps://pulse.mozilla.org:5671/"]
  #insecure_skip_verify = true
  username = "username1"
  password = "password1"
  #username = "guest"
  #password = "guest"
  exchange = "exchange/taskcluster-treeherder/v1/jobs"
  exchange_type = "topic"
  exchange_passive = true
  queue = "queue/relopsmonitoring/telegraf-tree"
  binding_key = "#"
  data_format = "json"
  #json_query = "status"
  tag_keys = ["jobKind", "productName"]
  json_string_fields = ["owner", "result", "state"]
  #fielddrop = [ "runs*", "retries*" ]
  taginclude = ["productName", "result", "state"]


[[aggregators.valuecounter]]
  namepass = ["pulse_amqp_consumer"]
  period = "60s"
  drop_original = true
  fields = ["state"]

[[aggregators.valuecounter]]
  namepass = ["pulse-treeherder_amqp_consumer"]
  period = "60s"
  drop_original = true
  fields = ["state"]
[agent]
  interval = "60s"
  round_interval = true
  metric_batch_size = 5000
  metric_buffer_limit = 20000
  collection_jitter = "0s"
  flush_interval = "5s"
  flush_jitter = "0s"
  precision = ""
  debug = true
  quiet = false
  logfile = "/etc/telegraf/run.log"
  hostname = "$HOSTNAME"
  omit_hostname = false

#[[outputs.influxdb]]
#  urls = ["https://hilldale-b40313e5.influxcloud.net:8086"]
#  database = "relops"
#  skip_database_creation = true
#  username = "relops_wo"
#  password = "9c0d4b316b764c90ef09e71be6de85b2"
#  retention_policy = ""
#  write_consistency = "any"
#  timeout = "5s"

[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]
  database = "telegraf"
  username = ""
  password = ""
  retention_policy = ""
  write_consistency = "any"
  timeout = "30s"

[[inputs.webhooks]]
   service_address = ":1619"
#
#   [inputs.webhooks.filestack]
#     path = "/filestack"
#
#   [inputs.webhooks.github]
#     path = "/github"
#     # secret = ""
#
#   [inputs.webhooks.mandrill]
#     path = "/mandrill"
#
#   [inputs.webhooks.rollbar]
#     path = "/rollbar"
#
   [inputs.webhooks.papertrail]
     path = "/papertrail"
#
#   [inputs.webhooks.particle]
#     path = "/particle"

[[inputs.http]]
  urls = [
    "https://queue.taskcluster.net/v1/provisioners"
  ]
  interval = "1h"
  timeout = "30s"
  data_format = "json"
  tag_keys = ["provisionerId"]

[[inputs.http]]
  urls = [
    "https://queue.taskcluster.net/v1/provisioners/releng-hardware/worker-types"
  ]
  interval = "1h"
  timeout = "30s"
  data_format = "json"
  #tag_keys = ["workerType"]
  json_string_fields = ["workerType"]
  json_query = "workerTypes"

[[inputs.http]]
  urls = [
    "https://queue.taskcluster.net/v1/provisioners/proj-autophone/worker-types"
  ]
  interval = "1h"
  timeout = "30s"
  data_format = "json"
  #tag_keys = ["workerType"]
  name_prefix = "proj-autophone"
  json_string_fields = ["workerType"]
  json_query = "workerTypes"


[[inputs.http]]
  urls = [
    "https://queue.taskcluster.net/v1/pending/releng-hardware/gecko-t-linux-talos",
    "https://queue.taskcluster.net/v1/pending/releng-hardware/gecko-t-linux-talos-b",
    "https://queue.taskcluster.net/v1/pending/releng-hardware/gecko-t-osx-1010",
    "https://queue.taskcluster.net/v1/pending/releng-hardware/gecko-t-osx-1010-beta",
    "https://queue.taskcluster.net/v1/pending/releng-hardware/gecko-t-win10-64-hw",
    "https://queue.taskcluster.net/v1/pending/releng-hardware/gecko-t-win10-64-hbeta",
    "https://queue.taskcluster.net/v1/pending/releng-hardware/gecko-t-win10-64-ux"
  ]
  data_format = "json"
  tag_keys = ["workerType"]
  interval = "300s"
  timeout = "60s"

[[inputs.http]]
  urls = [
    "https://queue.taskcluster.net/v1/pending/proj-autophone/gecko-t-ap-unit-p2",
    "https://queue.taskcluster.net/v1/pending/proj-autophone/gecko-t-ap-perf-p2",
    "https://queue.taskcluster.net/v1/pending/proj-autophone/gecko-t-ap-batt-p2",
    "https://queue.taskcluster.net/v1/pending/proj-autophone/gecko-t-ap-unit-g5",
    "https://queue.taskcluster.net/v1/pending/proj-autophone/gecko-t-ap-perf-g5",
    "https://queue.taskcluster.net/v1/pending/proj-autophone/gecko-t-ap-batt-g5",
    "https://queue.taskcluster.net/v1/pending/proj-autophone/gecko-t-ap-test-g5"
  ]
  data_format = "json"
  tag_keys = ["workerType"]
  name_prefix = "proj-autophone"
  interval = "300s"
  timeout = "60s"

[[inputs.http]]
  urls = [
    "https://aws-provisioner.taskcluster.net/v1/list-worker-type-summaries"
  ]
  interval = "300s"
  timeout = "30s"
  data_format = "json"
  name_prefix = "aws-provisioner"
  tag_keys = ["workerType"]
  #json_query = "result"

[[inputs.http]]
  urls = [
    "https://treestatus.mozilla-releng.net/trees2"
  ]
  interval = "300s"
  timeout = "30s"
  data_format = "json"
  name_prefix = "treestatus_all_"
  tag_keys = ["status", "tree"]
  json_string_fields = ["status", "reason", "message_of_the_day"]
  json_query = "result"

[[inputs.exec]]
  commands = [
    "/etc/telegraf/quarantined.sh"
  ]
  interval = "60m"
  timeout = "600s"
  data_format = "json"
  name_prefix = "quarantined_"
  json_string_fields = ["provisioner", "workerType", "workerId", "workerGroup"]
  tag_keys = ["provisioner", "workerType", "workerId", "workerGroup"]

[[inputs.exec]]
  commands = [
    "/etc/telegraf/check_vcs.sh"
  ]
  interval = "60s"
  timeout = "60s"
  data_format = "json"
  name_prefix = "vcssync_"
  tag_keys = ["repo"]
  json_string_fields = ["name", "message", "sha"]
  #json_time_key = "date"
  #json_time_format = "unix"
  json_time_key = "date"
  #json_time_format = "2006-01-02T15:04:05Z"  # git date format
  json_time_format = "2006-01-02T15:04:05-07:00"  # hg date format

[[inputs.exec]]
  commands = [
    "/etc/telegraf/treestatus.sh"
  ]
  interval = "300s"
  timeout = "30s"
  data_format = "json"
  name_prefix = "treestatus_stack_"
  json_string_fields = ["repo", "status", "who", "reason"]
  tag_keys = ["repo", "status", "who", "reason"]
  json_time_key = "timestamp"
  json_time_format = "unix"

[[inputs.exec]]
  commands = [
    "/etc/telegraf/queue.sh releng-hardware"
  ]
  interval = "120s"
  timeout = "120s"
  data_format = "json"
  name_prefix = "tc_queue_"
  tag_keys = ["provisionerId", "workerType"]

[[inputs.exec]]
  commands = [
    "/etc/telegraf/queue.sh bitbar gce proj-autophone proj-servo scriptworker-prov-v1 terraform-packet"
  ]
  interval = "300s"
  timeout = "120s"
  data_format = "json"
  name_prefix = "tc_queue_"
  tag_keys = ["provisionerId", "workerType"]

[[inputs.exec]]
  commands = [
    "/etc/telegraf/queue.sh aws-provisioner-v1"
  ]
  interval = "300s"
  timeout = "120s"
  data_format = "json"
  name_prefix = "tc_queue_"
  tag_keys = ["provisionerId", "workerType"]

#[[inputs.file]]
#  files = ["checker/json_data/google_dict.json"]
#  data_format = "json"
#  tag_keys = ["provisionerId", "workerType"]

[[inputs.amqp_consumer]]
  name_prefix = "pulse_"
  brokers = ["amqps://pulse.mozilla.org:5671/"]
  prefetch_count = 1000
  #insecure_skip_verify = true  # may need again: to work around cloudamqp ssl cert issues
  username = "username1"
  password = "password1"
  exchange = "exchange/taskcluster-queue/v1/task-failed"
  exchange_type = "topic"
  exchange_passive = true
  queue = "queue/relopsmonitoring/task-failed"
  queue_durability = "transient"
  max_undelivered_messages = 1000
  binding_key = "#"
  data_format = "json"
  json_query = "status"
  tag_keys = ["workerType", "provisionerId"]
  json_string_fields = ["state"]
  fielddrop = [ "runs*", "retries*" ]
  taginclude = ["workerType", "provisionerId", "state"]

[[aggregators.valuecounter]]
  namepass = ["pulse_amqp_consumer"]
  period = "60s"
  drop_original = true
  fields = ["state"]
