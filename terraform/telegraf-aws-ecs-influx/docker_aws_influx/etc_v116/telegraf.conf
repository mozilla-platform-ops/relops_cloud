[agent]
  interval = "$INTERVAL"
  round_interval = true
  metric_batch_size = 10000
  metric_buffer_limit = 30000
  collection_jitter = "300s"
  flush_interval = "60s"
  flush_jitter = "60s"
  precision = ""
  debug = false
  quiet = false
  #logfile = "/etc/telegraf/run.log"
  logfile = ""
  hostname = "$HOSTNAME"
  omit_hostname = true

[[outputs.influxdb]]
  # cloudops/prod influxdb:
  urls = ["$INFLUXDB_URL"]
  database = "$INFLUXDB_DB"
  skip_database_creation = true
  username = "$INFLUXDB_USER"
  password = "$INFLUXDB_PASSWORD"
  retention_policy = "six_month"
  write_consistency = "any"
  timeout = "120s"

[[inputs.influxdb_listener]]
  ## Address and port to host HTTP listener on
  service_address = ":8086"

  ## maximum duration before timing out read of the request
  read_timeout = "300s"
  ## maximum duration before timing out write of the response
  write_timeout = "300s"

  ## Maximum allowed http request body size in bytes.
  ## 0 means to use the default of 536,870,912 bytes (500 mebibytes)
  max_body_size = 0

  ## Maximum line size allowed to be sent in bytes.
  ## 0 means to use the default of 65536 bytes (64 kibibytes)
  max_line_size = 0

  ## Optional username and password to accept for HTTP basic authentication.
  ## You probably want to make sure you have TLS configured above for this.
  basic_username = "$INFLUXDB_USER"
  basic_password = "$INFLUXDB_PASSWORD"

[[inputs.webhooks]]
   service_address = ":1619"
#
#   [inputs.webhooks.filestack]
#     path = "/filestack"
#
   [inputs.webhooks.github]
     path = "/github"
     secret = "$GITHUB_WEBHOOK_SECRET"
#
#   [inputs.webhooks.mandrill]
#     path = "/mandrill"
#
#   [inputs.webhooks.rollbar]
#     path = "/rollbar"
#
   [inputs.webhooks.papertrail]
     path = "/papertrail"
#     [inputs.webhooks.papertrail.tags]
#       hardware = true

[[inputs.webhooks]]
   service_address = ":1620"
   name_override = "log_events_cloud"

   [inputs.webhooks.papertrail]
     path = "/events"

#   [inputs.webhooks.tags]
#     cloud = 1

[[processors.rename]]
  namepass = ["thermal"]

  [[processors.rename.replace]]
    field = "boottime"
    dest = "lastboot"

[[processors.converter]]
  namepass = ["thermal"]

  [processors.converter.fields]
    integer = ["lastboot"]

[[processors.regex]]
  namepass = ["log_events_cloud"]

  [[processors.regex.tags]]
    key = "host"
    pattern = "^((.*\\.mdc.\\.mozilla\\.com)|(.*\\.([^\\.]+\\.mozilla\\.com)))$"
    replacement = "${2}${4}"

[[aggregators.basicstats]]
  namepass = ["log_events_cloud"]
  period = "60s"
  drop_original = true
  stats = ["count","sum"]

[[processors.rename]]
  namepass = ["log_events_cloud"]
  order = 1
  [[processors.rename.replace]]
    field = "count_count"
    dest = "count"
  [[processors.rename.replace]]
    field = "count_sum"
    dest = "sum"

[[inputs.cpu]]
  name_override = "telegraf"
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false
  [inputs.cpu.tags]
    hostname = "$HOSTNAME"
    dataCenter = "$AWS_REGION"
[[inputs.mem]]
  name_override = "telegraf"
  [inputs.mem.tags]
    hostname = "$HOSTNAME"
    dataCenter = "$AWS_REGION"
[[inputs.system]]
  name_override = "telegraf"
  [inputs.system.tags]
    hostname = "$HOSTNAME"
    dataCenter = "$AWS_REGION"
