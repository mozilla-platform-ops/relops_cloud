[agent]
  interval = "$INTERVAL"
  round_interval = false
  metric_batch_size = 10000
  metric_buffer_limit = 30000
  collection_jitter = "120s"
  flush_interval = "60s"
  flush_jitter = "10s"
  precision = ""
  debug = false
  quiet = false
  #logfile = "/etc/telegraf/run.log"
  logfile = ""
  hostname = "$HOSTNAME"
  omit_hostname = true

[global_tags]
  app = "relsre-metrics"

[[outputs.prometheus_client]]
  listen = ":8000"  # Port where metrics will be exposed
  path = "/metrics"          # Path where metrics are exposed
  metric_version = 2  # Prometheus exposition format
  expiration_interval = "0" # Never expire metrics
  collectors_exclude = ["gocollector", "process"]

# [[outputs.influxdb]]
#   # cloudops/prod influxdb:
#   urls = ["$INFLUXDB_URL"]
#   database = "$INFLUXDB_DB"
#   skip_database_creation = true
#   username = "$INFLUXDB_USER"
#   password = "$INFLUXDB_PASSWORD"
#   retention_policy = "six_month"
#   write_consistency = "any"
#   timeout = "120s"

# [[processors.rename]]
#   namepass = ["telegraf_relay"]

#   [[processors.rename.replace]]
#     field = "boottime"
#     dest = "lastboot"

# [[processors.converter]]
#   namepass = ["telegraf_relay"]

#   [processors.converter.fields]
#     integer = ["lastboot"]

  [[inputs.exec]]
    commands = [
      "/etc/telegraf/tc_web_prom.sh releng-hardware"
    ]
    #interval = "$INTERVAL"
    timeout = "40m"
    data_format = "prometheus"
    name_prefix = "tc_web_"
    # tag_keys = ["provisionerId", "workerType"]

  # aerickson: no workers in this provisioner
  # [[inputs.exec]]
  #   commands = [
  #     "/etc/telegraf/tc_web_prom.sh aws-provisioner-v1"
  #   ]
  #   #interval = "$MEDIUM_INTERVAL"
  #   timeout = "40m"
  #   data_format = "prometheus"
  #   name_prefix = "tc_web_"
  #   # tag_keys = ["provisionerId", "workerType"]

  # aerickson: no workers in this provisioner
  # [[inputs.exec]]
  #   commands = [
  #     "/etc/telegraf/tc_web_prom.sh gce"
  #   ]
  #   interval = "$LONG_INTERVAL"
  #   timeout = "40m"
  #   data_format = "prometheus"
  #   name_prefix = "tc_web_"
    # tag_keys = ["provisionerId", "workerType"]

  [[inputs.exec]]
    commands = [
      "/etc/telegraf/tc_web_prom.sh proj-autophone terraform-packet"
    ]
    interval = "$MEDIUM_INTERVAL"
    timeout = "40m"
    data_format = "prometheus"
    name_prefix = "tc_web_"
    # tag_keys = ["provisionerId", "workerType"]

  [[inputs.exec]]
    commands = [
      "/etc/telegraf/tc_web_prom.sh bitbar proj-servo scriptworker-prov-v1"
    ]
    interval = "$LONG_INTERVAL"
    timeout = "40m"
    data_format = "prometheus"
    name_prefix = "tc_web_"
    # tag_keys = ["provisionerId", "workerType"]

  [[inputs.exec]]
    commands = [
      "/etc/telegraf/tc_web_prom.sh gecko-t"
    ]
    interval = "$LONG_INTERVAL"
    timeout = "40m"
    data_format = "prometheus"
    name_prefix = "tc_web_"
    # tag_keys = ["provisionerId", "workerType"]

  [[inputs.exec]]
  commands = [
      "/etc/telegraf/tc_web_prom.sh translations-1"
  ]
  interval = "$LONG_INTERVAL"
  timeout = "40m"
  data_format = "prometheus"
  name_prefix = "tc_web_"
  # tag_keys = ["provisionerId", "workerType"]

  [[inputs.exec]]
    commands = [
      "/etc/telegraf/tc_web_prom.sh gecko-1 gecko-2 gecko-3"
    ]
    interval = "$LONG_INTERVAL"
    timeout = "40m"
    data_format = "prometheus"
    name_prefix = "tc_web_"
    # tag_keys = ["provisionerId", "workerType"]

  # aerickson: no workers in this provisioner
  # [[inputs.exec]]
  #   commands = [
  #     "/etc/telegraf/tc_web_prom.sh gecko-b"
  #   ]
  #   interval = "$LONG_INTERVAL"
  #   timeout = "40m"
  #   data_format = "prometheus"
  #   name_prefix = "tc_web_"
  #   # tag_keys = ["provisionerId", "workerType"]

  [[inputs.exec]]
    commands = [
      "/etc/telegraf/tc_web_prom.sh mobile-1 mobile-3 mobile-t"
    ]
    interval = "$LONG_INTERVAL"
    timeout = "40m"
    data_format = "prometheus"
    name_prefix = "tc_web_"
    # tag_keys = ["provisionerId", "workerType"]


# [[inputs.cpu]]
#   name_override = "telegraf"
#   percpu = true
#   totalcpu = true
#   collect_cpu_time = false
#   report_active = false
#   [inputs.cpu.tags]
#     hostname = "$HOSTNAME"
#     dataCenter = "$AWS_REGION"
# [[inputs.mem]]
#   name_override = "telegraf"
#   [inputs.mem.tags]
#     hostname = "$HOSTNAME"
#     dataCenter = "$AWS_REGION"
# [[inputs.system]]
#   name_override = "telegraf"
#   [inputs.system.tags]
#     hostname = "$HOSTNAME"
#     dataCenter = "$AWS_REGION"
